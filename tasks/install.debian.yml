---

#
# Remove all possible traces after installation of previous versions of Mentat
# system to keep the target host as tidy as possible.
#
- block:

    - name: Removing traces after installation of previous versions of Mentat
      file:
        path: "{{ item }}"
        state: absent
      with_items: "{{ hm_mentat__deprecated_files }}"
      when: item not in ["/","/bin","/boot","/lib","/root","/sbin","/usr","/var"]

  when: hm_mentat__do_cleanup

#
# Choose which package suite should be installed on target system.
#
- set_fact:
    hm_mentat__install_suite: false

- set_fact:
    hm_mentat__install_suite: "{{ hm_mentat__suite }}"
  when: hm_mentat__suite and hm_mentat__suite in ["production", "development", "release"]

- block:

    - set_fact:
        hm_mentat__install_suite: "production"
      when: '"servers_production" in group_names'

    - set_fact:
        hm_mentat__install_suite: "release"
      when: '"servers_testing" in group_names'

    - set_fact:
        hm_mentat__install_suite: "development"
      when: '"servers_development" in group_names'

  when: not hm_mentat__install_suite

- debug: var=hm_mentat__install_suite
  tags:
    - debug

#
# Install appropriate GPG key and repository file.
#

- name: Installing APT repository GPG key for Mentat system packages
  apt_key:
    url: "{{ hm_mentat__package_repository_url }}/mentat/deb/mentat-{{ hm_mentat__install_suite }}.gpg"
    state: present
  notify: Refresh APT cache

- name: Installing custom version of sources.list file for Mentat system packages
  template:
    src: "{{ item }}"
    dest: /etc/apt/sources.list.d/mentat.list
    owner: root
    group: root
    mode: 0644
    backup: yes
  with_first_found:
    - "inventory/host_files/{{ inventory_hostname }}/honzamach.mentat/mentat.list.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.mentat/mentat.list.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.mentat/mentat.list.j2"
    - "inventory/group_files/servers/honzamach.mentat/mentat.list.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers/honzamach.mentat/mentat.list.j2"
    - "mentat.list.{{ ansible_lsb['codename'] }}.j2"
    - "mentat.list.j2"
  notify: Refresh APT cache


- meta: flush_handlers

#
# Perform installation process.
#

- name: Installing packages
  apt:
    name: "{{ hm_mentat__install_packages[ansible_os_family|lower]['apt'] }}"
    state: latest
    update_cache: "{{ hm_mentat__apt_force_update }}"

- name: Applying site local patches
  patch:
    backup: yes
    basedir: "{{ hm_mentat__python_venv }}"
    src: "{{ item }}"
  with_fileglob:
    - "inventory/host_files/{{ inventory_hostname }}/honzamach.mentat/patches/*.patch"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.mentat/patches/*.patch"
    - "inventory/group_files/servers/honzamach.mentat/patches/*.patch"

- name: Downloading IP geolocation databases
  shell: /etc/mentat/scripts/fetch-geoipdb.sh
  args:
    creates: /var/opt/opensourcedbs/.download.ts

- name: Managing Ansible workspace and cache on remote server
  file:
    path: /etc/mentat/ansible
    state: directory
    owner: root
    group: root
    mode: 0755
